// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  secid String @default(uuid())
  name String
  email String @unique
  password String
  refreshToken String?
  subscription Json?
  messages Messages[]
}

model Bussiness {
  id Int @id @default(autoincrement())
  secid String @default(uuid())
  name String
  email String @unique
  password String
  refreshToken String?
  subscription Json?
  messages Messages[]
  orderitems Orderitems[]
  order Order[]
}




model Cart {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      Int?        // Optional if tied to a logged-in user
  cartItems   CartItem[]  // Items in the cart
}

model CartItem {
  id         Int         @id @default(autoincrement())
  cart       Cart        @relation(fields: [cartId], references: [id])
  cartId     Int
  item       Orderitems  @relation(fields: [itemId], references: [id])
  itemId     Int
  quantity   Int         @default(1)
  extras     String?     // Customizations for the item
}

model Order {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  customerName String
  status       String       @default("Pending")
  totalPrice   Int          @default(0)
  orderItems   OrderItem[]  // Relation to the intermediate table
  messages Messages[]
  bussiness    Bussiness    @relation(fields: [bussinessId], references: [id])
  bussinessId  Int
}

model OrderItem {
  id         Int         @id @default(autoincrement())
  order      Order       @relation(fields: [orderId], references: [id])
  orderId    Int
  item       Orderitems  @relation(fields: [itemId], references: [id])
  itemId     Int
  quantity   Int         @default(1)
  extras     String?     // Customizations for the item
}

model Orderitems {
  id          Int          @id @default(autoincrement())
  name        String
  details     String
  extras      String?
  imagepath   String?
  price       Int
  bussiness   Bussiness    @relation(fields: [bussinessid], references: [id])
  bussinessid Int
  orderItems  OrderItem[]  // Relation to the intermediate table
  cartitem  CartItem[]
}


model Messages {
  id Int @id @default(autoincrement())
  sender String
  reciever String
  messagedata String
  user User @relation(fields: [userid], references: [id])
  userid Int
  bussiness Bussiness @relation(fields: [bussinessid], references: [id])
  bussinessid Int
  order Order @relation(fields: [orderid], references: [id])
  orderid Int

}